using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SipaaOS.Kernel
{
    public partial class KernelBase : Form
    {
        public static StreamWriter logger;
        public static string exeToOpenAfterBoot;
        public static bool recoverymode;
        public KernelBase()
        {
            InitializeComponent();
            Console.WriteLine("SipaaOS Kernel , Copyright Sipa Env.");
            Console.WriteLine("Checking if kernel config file exists...");
            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "Configuration\\KERNEL.cfg"))
            {
                Console.WriteLine("KERNEL.cfg exists! Reading content...");
                string[] configcontent = File.ReadAllLines(AppDomain.CurrentDomain.BaseDirectory + "Configuration\\KERNEL.cfg");
                exeToOpenAfterBoot = configcontent[3].Replace("exeToOpenAfterBoot=", "");
                string recovery = configcontent[4].Replace("recoveryMode=","");
                if  (recovery == "true")
                {
                    recoverymode = true;
                } else
                {
                    recoverymode = false;
                }
               Console.WriteLine("Kernel Config File read ended! Starting boot of SipaaOS...");
            } else
            {
                Console.WriteLine("KERNEL.cfg don't exist. Booting into recovery...");
                recoverymode = true;
            }
            new Boot().Show();
            this.Hide();
        }

        private void KernelBase_Load(object sender, EventArgs e)
        {

        }
    }
}

/**
 * SipaaOS Kernel Config File Content :
 * 
 * 1 | SipaaOS Kernel Config File
 * 2 | Do not edit this file if you are a noob.
 * 3 | ---------------------------------------------------
 * 4 | exeToOpenAfterBoot=silogonui.exe
 * 5 | recoveryMode=false
 * 6 |
 **/
